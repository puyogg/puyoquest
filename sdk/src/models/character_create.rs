/*
 * PPQ API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CharacterCreate {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "jp_name")]
    pub jp_name: String,
    #[serde(rename = "link_name")]
    pub link_name: String,
    #[serde(rename = "main_color", skip_serializing_if = "Option::is_none")]
    pub main_color: Option<String>,
    #[serde(rename = "side_color", skip_serializing_if = "Option::is_none")]
    pub side_color: Option<String>,
    #[serde(rename = "type1", skip_serializing_if = "Option::is_none")]
    pub type1: Option<String>,
    #[serde(rename = "type2", skip_serializing_if = "Option::is_none")]
    pub type2: Option<String>,
    #[serde(rename = "voice_trans", skip_serializing_if = "Option::is_none")]
    pub voice_trans: Option<String>,
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
}

impl CharacterCreate {
    pub fn new(name: String, jp_name: String, link_name: String) -> CharacterCreate {
        CharacterCreate {
            name,
            jp_name,
            link_name,
            main_color: None,
            side_color: None,
            type1: None,
            type2: None,
            voice_trans: None,
            updated_at: None,
        }
    }
}

