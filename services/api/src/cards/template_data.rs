use poem_openapi::Object;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, Object, Serialize, Deserialize, PartialEq, Eq)]
pub struct CardTemplateData {
    pub name: String,
    pub rarity: String,
    pub code: String,
    pub link: Option<String>,
    pub jpname: Option<String>,
    pub color: Option<String>,
    pub color2: Option<String>,
    pub type1: Option<String>,
    pub type2: Option<String>,
    pub maxlv: Option<String>,
    pub cost: Option<String>,
    pub hpmax: Option<String>,
    pub atkmax: Option<String>,
    pub rcvmax: Option<String>,
    pub backast: Option<String>,
    pub backlst: Option<String>,
    pub ast: Option<String>,
    pub astn: Option<String>,
    pub aste: Option<String>,
    pub ast2: Option<String>,
    pub ast2n: Option<String>,
    pub ast2e: Option<String>,
    pub ast3: Option<String>,
    pub ast3n: Option<String>,
    pub ast3e: Option<String>,
    pub jpast: Option<String>,
    pub jpast2: Option<String>,
    pub jpast3: Option<String>,
    pub lst: Option<String>,
    pub lste: Option<String>,
    pub lst2: Option<String>,
    pub lst2e: Option<String>,
    pub lst3: Option<String>,
    pub lst3e: Option<String>,
    pub lst3t: Option<String>,
    pub jplst: Option<String>,
    pub jplst2: Option<String>,
    pub jplst3: Option<String>,
    pub r#as: Option<String>,
    pub jpas: Option<String>,
    pub asn: Option<String>,
    pub asfn: Option<String>,
    pub aslv: Option<String>,
    pub ase: Option<String>,
    pub asfe: Option<String>,
    pub ls: Option<String>,
    pub lslv: Option<String>,
    pub lse: Option<String>,
    pub jpls: Option<String>,
    pub bs: Option<String>,
    pub jpbs: Option<String>,
    pub bslv: Option<String>,
    pub bsn: Option<String>,
    pub bse: Option<String>,
    pub ca: Option<String>,
    pub jpca: Option<String>,
    pub calv: Option<String>,
    pub can: Option<String>,
    pub cae: Option<String>,
    pub caalt: Option<String>,
    pub ts: Option<String>,
    pub tstype: Option<String>,
    pub tsact: Option<String>,
    pub tse: Option<String>,
    pub tse2: Option<String>,
    pub tse3: Option<String>,
    pub tse4: Option<String>,
    // TODO: how many tse are there?
    pub combin1: Option<String>,
    pub combin2: Option<String>,
    pub combin3: Option<String>,
    pub combin4: Option<String>,
    pub combin5: Option<String>,
    pub combin6: Option<String>,
    pub ss: Option<String>,
    pub jpss: Option<String>,
    pub sslv: Option<String>,
    pub ssstart: Option<String>,
    pub ssend: Option<String>,
    pub sse: Option<String>,
}
