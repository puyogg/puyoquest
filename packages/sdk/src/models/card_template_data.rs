/*
 * PPQ API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CardTemplateData {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "rarity")]
    pub rarity: String,
    #[serde(rename = "code")]
    pub code: String,
    #[serde(rename = "link", skip_serializing_if = "Option::is_none")]
    pub link: Option<String>,
    #[serde(rename = "jpname", skip_serializing_if = "Option::is_none")]
    pub jpname: Option<String>,
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<String>,
    #[serde(rename = "color2", skip_serializing_if = "Option::is_none")]
    pub color2: Option<String>,
    #[serde(rename = "type1", skip_serializing_if = "Option::is_none")]
    pub type1: Option<String>,
    #[serde(rename = "type2", skip_serializing_if = "Option::is_none")]
    pub type2: Option<String>,
    #[serde(rename = "maxlv", skip_serializing_if = "Option::is_none")]
    pub maxlv: Option<String>,
    #[serde(rename = "cost", skip_serializing_if = "Option::is_none")]
    pub cost: Option<String>,
    #[serde(rename = "hpmax", skip_serializing_if = "Option::is_none")]
    pub hpmax: Option<String>,
    #[serde(rename = "atkmax", skip_serializing_if = "Option::is_none")]
    pub atkmax: Option<String>,
    #[serde(rename = "rcvmax", skip_serializing_if = "Option::is_none")]
    pub rcvmax: Option<String>,
    #[serde(rename = "backast", skip_serializing_if = "Option::is_none")]
    pub backast: Option<String>,
    #[serde(rename = "backlst", skip_serializing_if = "Option::is_none")]
    pub backlst: Option<String>,
    #[serde(rename = "ast", skip_serializing_if = "Option::is_none")]
    pub ast: Option<String>,
    #[serde(rename = "astn", skip_serializing_if = "Option::is_none")]
    pub astn: Option<String>,
    #[serde(rename = "aste", skip_serializing_if = "Option::is_none")]
    pub aste: Option<String>,
    #[serde(rename = "ast2", skip_serializing_if = "Option::is_none")]
    pub ast2: Option<String>,
    #[serde(rename = "ast2n", skip_serializing_if = "Option::is_none")]
    pub ast2n: Option<String>,
    #[serde(rename = "ast2e", skip_serializing_if = "Option::is_none")]
    pub ast2e: Option<String>,
    #[serde(rename = "ast3", skip_serializing_if = "Option::is_none")]
    pub ast3: Option<String>,
    #[serde(rename = "ast3n", skip_serializing_if = "Option::is_none")]
    pub ast3n: Option<String>,
    #[serde(rename = "ast3e", skip_serializing_if = "Option::is_none")]
    pub ast3e: Option<String>,
    #[serde(rename = "jpast", skip_serializing_if = "Option::is_none")]
    pub jpast: Option<String>,
    #[serde(rename = "jpast2", skip_serializing_if = "Option::is_none")]
    pub jpast2: Option<String>,
    #[serde(rename = "jpast3", skip_serializing_if = "Option::is_none")]
    pub jpast3: Option<String>,
    #[serde(rename = "lst", skip_serializing_if = "Option::is_none")]
    pub lst: Option<String>,
    #[serde(rename = "lste", skip_serializing_if = "Option::is_none")]
    pub lste: Option<String>,
    #[serde(rename = "lst2", skip_serializing_if = "Option::is_none")]
    pub lst2: Option<String>,
    #[serde(rename = "lst2e", skip_serializing_if = "Option::is_none")]
    pub lst2e: Option<String>,
    #[serde(rename = "lst3", skip_serializing_if = "Option::is_none")]
    pub lst3: Option<String>,
    #[serde(rename = "lst3e", skip_serializing_if = "Option::is_none")]
    pub lst3e: Option<String>,
    #[serde(rename = "lst3t", skip_serializing_if = "Option::is_none")]
    pub lst3t: Option<String>,
    #[serde(rename = "jplst", skip_serializing_if = "Option::is_none")]
    pub jplst: Option<String>,
    #[serde(rename = "jplst2", skip_serializing_if = "Option::is_none")]
    pub jplst2: Option<String>,
    #[serde(rename = "jplst3", skip_serializing_if = "Option::is_none")]
    pub jplst3: Option<String>,
    #[serde(rename = "as", skip_serializing_if = "Option::is_none")]
    pub r#as: Option<String>,
    #[serde(rename = "jpas", skip_serializing_if = "Option::is_none")]
    pub jpas: Option<String>,
    #[serde(rename = "asn", skip_serializing_if = "Option::is_none")]
    pub asn: Option<String>,
    #[serde(rename = "asfn", skip_serializing_if = "Option::is_none")]
    pub asfn: Option<String>,
    #[serde(rename = "aslv", skip_serializing_if = "Option::is_none")]
    pub aslv: Option<String>,
    #[serde(rename = "ase", skip_serializing_if = "Option::is_none")]
    pub ase: Option<String>,
    #[serde(rename = "asfe", skip_serializing_if = "Option::is_none")]
    pub asfe: Option<String>,
    #[serde(rename = "ls", skip_serializing_if = "Option::is_none")]
    pub ls: Option<String>,
    #[serde(rename = "lslv", skip_serializing_if = "Option::is_none")]
    pub lslv: Option<String>,
    #[serde(rename = "lse", skip_serializing_if = "Option::is_none")]
    pub lse: Option<String>,
    #[serde(rename = "jpls", skip_serializing_if = "Option::is_none")]
    pub jpls: Option<String>,
    #[serde(rename = "bs", skip_serializing_if = "Option::is_none")]
    pub bs: Option<String>,
    #[serde(rename = "jpbs", skip_serializing_if = "Option::is_none")]
    pub jpbs: Option<String>,
    #[serde(rename = "bslv", skip_serializing_if = "Option::is_none")]
    pub bslv: Option<String>,
    #[serde(rename = "bsn", skip_serializing_if = "Option::is_none")]
    pub bsn: Option<String>,
    #[serde(rename = "bse", skip_serializing_if = "Option::is_none")]
    pub bse: Option<String>,
    #[serde(rename = "ca", skip_serializing_if = "Option::is_none")]
    pub ca: Option<String>,
    #[serde(rename = "jpca", skip_serializing_if = "Option::is_none")]
    pub jpca: Option<String>,
    #[serde(rename = "calv", skip_serializing_if = "Option::is_none")]
    pub calv: Option<String>,
    #[serde(rename = "can", skip_serializing_if = "Option::is_none")]
    pub can: Option<String>,
    #[serde(rename = "cae", skip_serializing_if = "Option::is_none")]
    pub cae: Option<String>,
    #[serde(rename = "caalt", skip_serializing_if = "Option::is_none")]
    pub caalt: Option<String>,
    #[serde(rename = "ts", skip_serializing_if = "Option::is_none")]
    pub ts: Option<String>,
    #[serde(rename = "tstype", skip_serializing_if = "Option::is_none")]
    pub tstype: Option<String>,
    #[serde(rename = "tsact", skip_serializing_if = "Option::is_none")]
    pub tsact: Option<String>,
    #[serde(rename = "tse", skip_serializing_if = "Option::is_none")]
    pub tse: Option<String>,
    #[serde(rename = "tse2", skip_serializing_if = "Option::is_none")]
    pub tse2: Option<String>,
    #[serde(rename = "tse3", skip_serializing_if = "Option::is_none")]
    pub tse3: Option<String>,
    #[serde(rename = "tse4", skip_serializing_if = "Option::is_none")]
    pub tse4: Option<String>,
    #[serde(rename = "combin1", skip_serializing_if = "Option::is_none")]
    pub combin1: Option<String>,
    #[serde(rename = "combin2", skip_serializing_if = "Option::is_none")]
    pub combin2: Option<String>,
    #[serde(rename = "combin3", skip_serializing_if = "Option::is_none")]
    pub combin3: Option<String>,
    #[serde(rename = "combin4", skip_serializing_if = "Option::is_none")]
    pub combin4: Option<String>,
    #[serde(rename = "combin5", skip_serializing_if = "Option::is_none")]
    pub combin5: Option<String>,
    #[serde(rename = "combin6", skip_serializing_if = "Option::is_none")]
    pub combin6: Option<String>,
    #[serde(rename = "ss", skip_serializing_if = "Option::is_none")]
    pub ss: Option<String>,
    #[serde(rename = "jpss", skip_serializing_if = "Option::is_none")]
    pub jpss: Option<String>,
    #[serde(rename = "sslv", skip_serializing_if = "Option::is_none")]
    pub sslv: Option<String>,
    #[serde(rename = "ssstart", skip_serializing_if = "Option::is_none")]
    pub ssstart: Option<String>,
    #[serde(rename = "ssend", skip_serializing_if = "Option::is_none")]
    pub ssend: Option<String>,
    #[serde(rename = "sse", skip_serializing_if = "Option::is_none")]
    pub sse: Option<String>,
}

impl CardTemplateData {
    pub fn new(name: String, rarity: String, code: String) -> CardTemplateData {
        CardTemplateData {
            name,
            rarity,
            code,
            link: None,
            jpname: None,
            color: None,
            color2: None,
            type1: None,
            type2: None,
            maxlv: None,
            cost: None,
            hpmax: None,
            atkmax: None,
            rcvmax: None,
            backast: None,
            backlst: None,
            ast: None,
            astn: None,
            aste: None,
            ast2: None,
            ast2n: None,
            ast2e: None,
            ast3: None,
            ast3n: None,
            ast3e: None,
            jpast: None,
            jpast2: None,
            jpast3: None,
            lst: None,
            lste: None,
            lst2: None,
            lst2e: None,
            lst3: None,
            lst3e: None,
            lst3t: None,
            jplst: None,
            jplst2: None,
            jplst3: None,
            r#as: None,
            jpas: None,
            asn: None,
            asfn: None,
            aslv: None,
            ase: None,
            asfe: None,
            ls: None,
            lslv: None,
            lse: None,
            jpls: None,
            bs: None,
            jpbs: None,
            bslv: None,
            bsn: None,
            bse: None,
            ca: None,
            jpca: None,
            calv: None,
            can: None,
            cae: None,
            caalt: None,
            ts: None,
            tstype: None,
            tsact: None,
            tse: None,
            tse2: None,
            tse3: None,
            tse4: None,
            combin1: None,
            combin2: None,
            combin3: None,
            combin4: None,
            combin5: None,
            combin6: None,
            ss: None,
            jpss: None,
            sslv: None,
            ssstart: None,
            ssend: None,
            sse: None,
        }
    }
}

